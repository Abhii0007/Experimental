#To Use this Project, make sure (manage.py and this project's main.py) must in same directory to link to the database.


Django Master v1.0 - GUI Tool for Django Automation
Django Master v1.0 is an intuitive GUI tool designed to simplify the most common Django operations that typically require manual command-line interactions. This project streamlines essential Django tasks, including database management, running the development server, accessing the admin interface, and much more.

Built using PySide6 (v6.7.1), Python, and Windows APIs, this tool aims to make Django development more efficient and beginner-friendly.


üöÄ Features:-

Run Django Server: Start or stop the Django development server with a single click.
Database Management: Easily handle database migrations, updates, and queries.
Access Admin Panel: Launch the Django admin interface directly from the GUI.
Command Execution: Execute important Django commands like makemigrations, migrate, and createsuperuser without opening the terminal.
Process Control: Manage server processes seamlessly with integrated threading and process handling.
Data Analysis: Integrates Pandas for managing and displaying database data in a user-friendly manner.
Cross-Platform Compatibility: Designed for Windows, leveraging Windows APIs for smooth integration.


üõ†Ô∏è Technologies Used
Python: Core programming language.
PySide6 (v6.7.1): Open-source GUI framework for creating the application interface.
Django: The backend framework for handling database and web application logic.
Pandas: For managing and displaying tabular data from the Django database.
Subprocess: For managing Django server processes and running shell commands.
Windows APIs: For platform-specific optimizations.


‚öôÔ∏è Installation Guide
Prerequisites
Python 3.9 or above
Pip package manager
Django installed (pip install django)
PySide6 installed (pip install pyside6==6.7.1)
Pandas installed (pip install pandas)

üåü How It Works
Launch the application by running main.py.
Use the buttons on the GUI to execute Django commands like:
Start/stop the server.
Create and apply migrations.
Open the Django admin interface.
Perform database operations or analyze data with Pandas.



üìñ Features in Progress
This project is currently in progress, and the following features are planned for future updates:

AI Integration: Use AI to analyze database patterns and predict optimization strategies.
Custom Command Support: Allow users to define and execute custom Django commands.
Multi-Platform Support: Extend compatibility to Linux and macOS.
Error Logs Viewer: Integrate a feature to display server error logs within the GUI


ü§ù Contribution
Contributions are welcome! Feel free to fork the repository and submit a pull request with your enhancements or fixes.
